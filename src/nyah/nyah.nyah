grammar "nyah"

IdentifierTail = [A-Za-z0-9_]*

ClassName      = [A-Z] ^ IdentifierTail
AttributeName  = [a-z] ^ IdentifierTail

SpecialCharacter = '\' [nrst'"]
Character = SpecialCharacter | "'" !\' "'" | '"' !\" '"'
StringMatch = \' .*? \' | \" .*? \"

MutableSpecialCharacter = '\' [wWSdD] | '.'
CharacterRange = '[' (.|'\'.)+? ']'
MutableCharacter = CharacterRange | MutableSpecialCharacter

Expression {
    begin = TODO
}

Attribute {
    key name = AttributeName
    enum prefix = 'key' | ('local' ||| 'skip')?

    begin = prefix name '=' > value=Expression
}

Class : ClassPrefix {
    key name    = ClassName
    contents    = (Class | Attribute)+
    enum prefix = 'skip' | 'enum' 

    begin = prefix className ~ '=' > Expression | '{' >> contents '}'
}

Global = Class*
