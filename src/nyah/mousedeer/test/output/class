ast beard.variant.Variant {
    mousedeer.parser.nyah.Function,
    mousedeer.parser.nyah.VariableDefinition,
    mousedeer.parser.nyah.Class,
    mousedeer.parser.nyah.Module
}[] => [
    Module: (
        [
            "hello",
            "mod"
        ],
        [
            Class: (
                "Bool",
                [
                    (
                        TypeMatch: "T",
                        null
                    )
                ],
                [
                    (
                        "public",
                        "val",
                        TypeMatch: ParametricTypeMatch: (
                            (
                                ":",
                                "const"
                            ),
                            "bool"
                        ),
                        null
                    )
                ],
                ClassBlock: [
                    VariableDefinition: (
                        "value",
                        Expression: "val"
                    )
                ]
            )
        ]
    ),
    Module: (
        [
            "another",
            "subfriend"
        ],
        [
            VariableDefinition: (
                "friend",
                Expression: Integer: "1"
            )
        ]
    )
]
global {
  hello: module - parent [empty] {
    mod: module - parent [module hello] {
      Bool: class - parent [module hello.mod] {
        value: variable definition - parent [class Bool]
      }
    }
  }
  another: module - parent [empty] {
    subfriend: module - parent [module another] {
      friend: variable definition - parent [module another.subfriend]
    }
  }
}
