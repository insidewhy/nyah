mousedeer.parser.nyah.Function[] => [
    [34mFunction[0;m: (
        "def",
        "hey",
        [],
        [
            [34mExpression[0;m: [34mAssigningOp[0;m: joined [
                "hello"
                "*="
                [34mAndOp[0;m: [
                    [34mAdditionOp[0;m: joined [
                        [34mRealNumber[0;m: (
                            "12",
                            "1"
                        )
                        +
                        [34mScalingOp[0;m: joined [
                            "b"
                            *
                            "a"
                        ]
                    ],
                    "c"
                ]
            ],
            [34mExpression[0;m: [34mReturningOp[0;m: (
                =,
                [34mRealNumber[0;m: (
                    "14",
                    "4"
                )
            )
        ]
    ),
    [34mFunction[0;m: (
        "override",
        "add",
        [
            "a",
            "b"
        ],
        [
            [34mExpression[0;m: [34mAdditionOp[0;m: joined [
                "a"
                +
                "b"
            ],
            [34mExpression[0;m: [34mFunctionCall[0;m: [
                "c",
                [34mExpression[0;m: [34mTupleOp[0;m: [
                    [34mInteger[0;m: "1",
                    [34mInteger[0;m: "2"
                ]
            ],
            [34mExpression[0;m: [34mAdditionOp[0;m: joined [
                [34mScalingOp[0;m: joined [
                    "x"
                    *
                    [34mCharacter[0;m: y
                ]
                +
                "c"
            ],
            [34mExpression[0;m: [34mFunctionCall[0;m: [
                "d",
                [34mInteger[0;m: "4",
                [34mInteger[0;m: "5"
            ],
            [34mFunction[0;m: (
                "def",
                "famon",
                [],
                [34mExpression[0;m: [34mReturningOp[0;m: (
                    =,
                    [34mAdditionOp[0;m: joined [
                        "a"
                        +
                        [34mString[0;m: "conka"
                    ]
                )
            ),
            [34mExpression[0;m: [34mSuffixOp[0;m: (
                "x",
                "++"
            ),
            [34mExpression[0;m: [34mPrefixOp[0;m: (
                "++",
                "y"
            ),
            [34mExpression[0;m: [34mAdditionOp[0;m: joined [
                [34mSuffixOp[0;m: (
                    "x",
                    "++"
                )
                -
                [34mPrefixOp[0;m: (
                    "++",
                    "y"
                )
            ],
            [34mExpression[0;m: [34mMemberCallOp[0;m: (
                "m",
                .,
                [
                    "single",
                    [34mInteger[0;m: "1"
                ]
            ),
            [34mExpression[0;m: [34mFunctionCall[0;m: [
                "m",
                "single",
                [34mInteger[0;m: "1"
            ],
            [34mExpression[0;m: [34mMemberCallOp[0;m: (
                "m",
                .,
                [
                    "double",
                    [34mExpression[0;m: [34mTupleOp[0;m: [
                        [34mInteger[0;m: "1",
                        [34mInteger[0;m: "2"
                    ]
                ]
            ),
            [34mExpression[0;m: [34mFunctionCall[0;m: [
                "m",
                "double",
                [34mExpression[0;m: [34mTupleOp[0;m: [
                    [34mInteger[0;m: "1",
                    [34mCharacter[0;m: "\'"
                ]
            ],
            [34mExpression[0;m: [34mAdditionOp[0;m: joined [
                [34mInteger[0;m: "14"
                +
                [34mPrefixOp[0;m: (
                    "++",
                    "a"
                )
            ],
            [34mExpression[0;m: [34mAssigningOp[0;m: joined [
                [34mTupleOp[0;m: [
                    "a",
                    "b"
                ]
                =
                [34mTupleOp[0;m: [
                    "c",
                    "d"
                ]
            ],
            [34mExpression[0;m: [34mAssigningOp[0;m: joined [
                [34mTupleOp[0;m: [
                    "a",
                    [34mOrOp[0;m: [
                        "b",
                        "c"
                    ],
                    "d"
                ]
                =
                [34mTupleOp[0;m: [
                    "e",
                    "f",
                    "g"
                ]
            ],
            [34mExpression[0;m: [34mReturningOp[0;m: (
                =,
                [34mFunctionCall[0;m: [
                    "famon",
                    [34mString[0;m: "willy \"stringboy\" williamson"
                ]
            )
        ]
    )
]
