include [ [ "grammar" ] ]
module id [
    "nyah"
    "mousebear"
    "grammar"
]
module [
    "nyah": MetaGrammar: (
        [ "grammar" ]
        [
            "MetaIdentifier": Rule: (
                '-'
                Expression: ScopedRule: (
                    "grammar"
                    "Identifier"
                )
            )
            "ScopedIdentifier": Rule: (
                '-'
                Expression: Join: (
                    "MetaIdentifier"
                    "%+"
                    String: "."
                )
            )
            "ModuleDefinition": Rule: (
                '-'
                Expression: Sequence: [
                    String: "@module"
                    "ScopedIdentifier"
                ]
            )
            "MetaGrammar": Rule: (
                '='
                Expression: Sequence: [
                    String: "@grammar"
                    Prefix: (
                        '#'
                        "MetaIdentifier"
                    )
                    Suffix: (
                        Expression: Sequence: [
                            String: ":"
                            "ScopedIdentifier"
                        ]
                        '?'
                    )
                    ScopedRule: (
                        "grammar"
                        "Grammar"
                    )
                ]
            )
            "Module": Rule: (
                '='
                Expression: Sequence: [
                    Prefix: (
                        "#+"
                        Expression: Suffix: (
                            "ModuleDefinition"
                            '?'
                        )
                    )
                    Suffix: (
                        "MetaGrammar"
                        '+'
                    )
                ]
            )
            "Include": Rule: (
                '-'
                Expression: Sequence: [
                    String: "@include"
                    Join: (
                        "MetaIdentifier"
                        "%+"
                        String: "/"
                    )
                ]
            )
            "Grammar": Rule: (
                '-'
                Expression: Sequence: [
                    Suffix: (
                        "Include"
                        '*'
                    )
                    Suffix: (
                        "Module"
                        '+'
                    )
                ]
            )
        ]
    )
    "grammar": MetaGrammar: (
        empty
        [
            "Spacing": Rule: (
                '-'
                Expression: Suffix: (
                    Expression: OrderedChoice: [
                        "\s"
                        Joined: [
                            String: "//"
                            Suffix: (
                                Expression: Prefix: (
                                    '!'
                                    "\n"
                                )
                                '*'
                            )
                            "\n"
                        ]
                    ]
                    '+'
                )
            )
            "AnyCharacter": Rule: (
                '-'
                Expression: String: "."
            )
            "CharacterRange": Rule: (
                '='
                Expression: Joined: [
                    String: "["
                    Suffix: (
                        Expression: OrderedChoice: [
                            Joined: [
                                CharacterRange: [ "\\" ]
                                CharacterRange: [
                                    "\\"
                                    "\]"
                                    's'
                                    'S'
                                    'n'
                                    'N'
                                    't'
                                    'T'
                                    'w'
                                    'W'
                                ]
                            ]
                            Expression: Joined: [
                                '.'
                                String: "-"
                                '.'
                            ]
                            '.'
                        ]
                        '*'
                    )
                    String: "]"
                ]
            )
            "Escape": Rule: (
                '-'
                Expression: Joined: [
                    CharacterRange: [ "\\" ]
                    CharacterRange: [
                        's'
                        'S'
                        'n'
                        'N'
                        't'
                        'T'
                        'w'
                        'W'
                        '.'
                        '"'
                        '\''
                        '&'
                        '!'
                        '+'
                        '*'
                        "\\"
                    ]
                ]
            )
            "String": Rule: (
                '='
                Expression: OrderedChoice: [
                    Joined: [
                        String: "\""
                        Suffix: (
                            Expression: OrderedChoice: [
                                "Escape"
                                Prefix: (
                                    '!'
                                    String: "\""
                                )
                            ]
                            "^*"
                        )
                        String: "\""
                    ]
                    Joined: [
                        String: "'"
                        Suffix: (
                            Expression: OrderedChoice: [
                                "Escape"
                                Prefix: (
                                    '!'
                                    String: "'"
                                )
                            ]
                            "^*"
                        )
                        String: "'"
                    ]
                ]
            )
            "Identifier": Rule: (
                '-'
                Expression: Joined: [
                    CharacterRange: [
                        (
                            'a'
                            'z'
                        )
                        (
                            'A'
                            'Z'
                        )
                        '_'
                    ]
                    Suffix: (
                        CharacterRange: [
                            (
                                'a'
                                'z'
                            )
                            (
                                'A'
                                'Z'
                            )
                            (
                                '0'
                                '9'
                            )
                            '_'
                        ]
                        '+'
                    )
                ]
            )
            "ScopedRule": Rule: (
                '='
                Expression: Sequence: [
                    "Identifier"
                    String: "::"
                    "Identifier"
                ]
            )
            "Primary": Rule: (
                '-'
                Expression: OrderedChoice: [
                    "String"
                    "CharacterRange"
                    "Escape"
                    "AnyCharacter"
                    "ScopedRule"
                    Sequence: [
                        "Identifier"
                        Prefix: (
                            "&!"
                            String: "<"
                        )
                    ]
                    Sequence: [
                        String: "("
                        "Expression"
                        String: ")"
                    ]
                ]
            )
            "Suffix": Rule: (
                '='
                Expression: Sequence: [
                    "Primary"
                    Suffix: (
                        Expression: OrderedChoice: [
                            String: "^+"
                            String: "^*"
                            CharacterRange: [
                                '?'
                                '*'
                                '+'
                            ]
                            String: "|+"
                            String: "|?"
                        ]
                        "|?"
                    )
                ]
            )
            "Prefix": Rule: (
                '='
                Expression: Sequence: [
                    Suffix: (
                        Expression: OrderedChoice: [
                            String: "&!"
                            String: "#+"
                            CharacterRange: [
                                '&'
                                '!'
                                '#'
                            ]
                        ]
                        "|?"
                    )
                    "Suffix"
                ]
            )
            "Join": Rule: (
                '='
                Expression: Sequence: [
                    "Prefix"
                    Expression: OrderedChoice: [
                        String: "^%"
                        String: "%+"
                        String: "%"
                        String: "|%"
                        String: "|^%"
                    ]
                    "Prefix"
                ]
            )
            "Joined": Rule: (
                '='
                Expression: Join: (
                    Expression: OrderedChoice: [
                        "Join"
                        "Prefix"
                    ]
                    "|%"
                    String: "^"
                )
            )
            "Sequence": Rule: (
                '='
                Expression: Suffix: (
                    "Joined"
                    "|+"
                )
            )
            "OrderedChoice": Rule: (
                '='
                Expression: Join: (
                    "Sequence"
                    "|%"
                    String: "/"
                )
            )
            "Expression": Rule: (
                '='
                Expression: "OrderedChoice"
            )
            "Rule": Rule: (
                '='
                Expression: Sequence: [
                    Prefix: (
                        '#'
                        "Identifier"
                    )
                    Joined: [
                        String: "<"
                        CharacterRange: [
                            '-'
                            '='
                        ]
                    ]
                    "Expression"
                ]
            )
            "Grammar": Rule: (
                '-'
                Expression: Suffix: (
                    "Rule"
                    '+'
                )
            )
        ]
    )
]
