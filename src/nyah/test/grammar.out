file grammar.nyah
grammar "grammar" = [
    Rule: (
        RuleName: "Spacing"
        Expression: Suffix: (
            Expression: OrderedChoice: [
                "\s"
                Joined: [
                    "//"
                    Suffix: (
                        Expression: Prefix: (
                            '!'
                            "\n"
                        )
                        '*'
                    )
                    "\n"
                ]
            ]
            '+'
        )
    )
    Rule: (
        RuleName: "AnyCharacter"
        Expression: "."
    )
    NodeRule: (
        RuleName: "CharacterRange"
        Expression: Joined: [
            "["
            Suffix: (
                Expression: OrderedChoice: [
                    Joined: [
                        CharacterRange: [ "\\" ]
                        CharacterRange: [
                            "\\"
                            "\]"
                            's'
                            'S'
                            'n'
                            'N'
                            't'
                            'T'
                            'w'
                            'W'
                        ]
                    ]
                    Expression: Joined: [
                        '.'
                        "-"
                        '.'
                    ]
                    '.'
                ]
                '*'
            )
            "]"
        ]
    )
    Rule: (
        RuleName: "Escape"
        Expression: Joined: [
            CharacterRange: [ "\\" ]
            CharacterRange: [
                's'
                'S'
                'n'
                'N'
                't'
                'T'
                'w'
                'W'
                '.'
                '"'
                '\''
                '&'
                '!'
                '+'
                '*'
                "\\"
            ]
        ]
    )
    Rule: (
        RuleName: "String"
        Expression: OrderedChoice: [
            Joined: [
                "\""
                Suffix: (
                    Expression: OrderedChoice: [
                        RuleName: "Escape"
                        Prefix: (
                            '!'
                            "\""
                        )
                    ]
                    "^*"
                )
                "\""
            ]
            Joined: [
                "'"
                Suffix: (
                    Expression: OrderedChoice: [
                        RuleName: "Escape"
                        Prefix: (
                            '!'
                            "'"
                        )
                    ]
                    "^*"
                )
                "'"
            ]
        ]
    )
    NodeRule: (
        RuleName: "RuleName"
        Expression: Joined: [
            CharacterRange: [ (
                'A'
                'Z'
            ) ]
            Suffix: (
                CharacterRange: [
                    (
                        'a'
                        'z'
                    )
                    (
                        'A'
                        'Z'
                    )
                    (
                        '0'
                        '9'
                    )
                    '_'
                ]
                '+'
            )
        ]
    )
    Rule: (
        RuleName: "Primary"
        Expression: OrderedChoice: [
            Sequence: [
                RuleName: "RuleName"
                Prefix: (
                    '!'
                    "<"
                )
            ]
            Sequence: [
                "("
                RuleName: "Expression"
                ")"
            ]
            RuleName: "AnyCharacter"
            RuleName: "String"
            RuleName: "Escape"
            RuleName: "RuleName"
            RuleName: "CharacterRange"
        ]
    )
    NodeRule: (
        RuleName: "Suffix"
        Expression: Sequence: [
            RuleName: "Primary"
            Suffix: (
                Expression: OrderedChoice: [
                    "^+"
                    "^*"
                    CharacterRange: [
                        '?'
                        '*'
                        '+'
                    ]
                    "|+"
                    "|?"
                ]
                "|?"
            )
        ]
    )
    NodeRule: (
        RuleName: "Prefix"
        Expression: Sequence: [
            Suffix: (
                Expression: OrderedChoice: [
                    "&!"
                    CharacterRange: [
                        '&'
                        '!'
                    ]
                ]
                "|?"
            )
            RuleName: "Suffix"
        ]
    )
    NodeRule: (
        RuleName: "Join"
        Expression: Sequence: [
            RuleName: "Prefix"
            Expression: OrderedChoice: [
                "^%"
                "%+"
                "%"
                "|%"
            ]
            RuleName: "Prefix"
        ]
    )
    NodeRule: (
        RuleName: "Joined"
        Expression: Join: (
            Expression: OrderedChoice: [
                RuleName: "Join"
                RuleName: "Prefix"
            ]
            "|%"
            "^"
        )
    )
    NodeRule: (
        RuleName: "Sequence"
        Expression: Suffix: (
            RuleName: "Joined"
            "|+"
        )
    )
    NodeRule: (
        RuleName: "OrderedChoice"
        Expression: Join: (
            RuleName: "Sequence"
            "|%"
            "/"
        )
    )
    NodeRule: (
        RuleName: "Expression"
        Expression: RuleName: "OrderedChoice"
    )
    NodeRule: (
        RuleName: "Rule"
        Expression: Sequence: [
            RuleName: "RuleName"
            "<-"
            RuleName: "Expression"
        ]
    )
    NodeRule: (
        RuleName: "NodeRule"
        Expression: Sequence: [
            RuleName: "RuleName"
            "<="
            RuleName: "Expression"
        ]
    )
    Rule: (
        RuleName: "Grammar"
        Expression: Suffix: (
            Expression: OrderedChoice: [
                RuleName: "Rule"
                RuleName: "NodeRule"
            ]
            '+'
        )
    )
]
