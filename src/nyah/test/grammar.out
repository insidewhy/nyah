file grammar.nyah
grammar "grammar" = [
    Rule: (
        "Spacing"
        '-'
        Expression: Suffix: (
            Expression: OrderedChoice: [
                "\s"
                Joined: [
                    String: "//"
                    Suffix: (
                        Expression: Prefix: (
                            '!'
                            "\n"
                        )
                        '*'
                    )
                    "\n"
                ]
            ]
            '+'
        )
    )
    Rule: (
        "AnyCharacter"
        '-'
        Expression: String: "."
    )
    Rule: (
        "CharacterRange"
        '='
        Expression: Joined: [
            String: "["
            Suffix: (
                Expression: OrderedChoice: [
                    Joined: [
                        CharacterRange: [ "\\" ]
                        CharacterRange: [
                            "\\"
                            "\]"
                            's'
                            'S'
                            'n'
                            'N'
                            't'
                            'T'
                            'w'
                            'W'
                        ]
                    ]
                    Expression: Joined: [
                        '.'
                        String: "-"
                        '.'
                    ]
                    '.'
                ]
                '*'
            )
            String: "]"
        ]
    )
    Rule: (
        "Escape"
        '-'
        Expression: Joined: [
            CharacterRange: [ "\\" ]
            CharacterRange: [
                's'
                'S'
                'n'
                'N'
                't'
                'T'
                'w'
                'W'
                '.'
                '"'
                '\''
                '&'
                '!'
                '+'
                '*'
                "\\"
            ]
        ]
    )
    Rule: (
        "String"
        '='
        Expression: OrderedChoice: [
            Joined: [
                String: "\""
                Suffix: (
                    Expression: OrderedChoice: [
                        "Escape"
                        Prefix: (
                            '!'
                            String: "\""
                        )
                    ]
                    "^*"
                )
                String: "\""
            ]
            Joined: [
                String: "'"
                Suffix: (
                    Expression: OrderedChoice: [
                        "Escape"
                        Prefix: (
                            '!'
                            String: "'"
                        )
                    ]
                    "^*"
                )
                String: "'"
            ]
        ]
    )
    Rule: (
        "RuleName"
        '-'
        Expression: Joined: [
            CharacterRange: [ (
                'A'
                'Z'
            ) ]
            Suffix: (
                CharacterRange: [
                    (
                        'a'
                        'z'
                    )
                    (
                        'A'
                        'Z'
                    )
                    (
                        '0'
                        '9'
                    )
                    '_'
                ]
                '+'
            )
        ]
    )
    Rule: (
        "GrammarIdentifier"
        '-'
        Expression: Joined: [
            CharacterRange: [
                (
                    'a'
                    'z'
                )
                (
                    'A'
                    'Z'
                )
            ]
            Suffix: (
                CharacterRange: [
                    (
                        'a'
                        'z'
                    )
                    (
                        'A'
                        'Z'
                    )
                    (
                        '0'
                        '9'
                    )
                    '_'
                ]
                '+'
            )
        ]
    )
    Rule: (
        "ScopedRule"
        '='
        Expression: Sequence: [
            "GrammarIdentifier"
            String: ":"
            "RuleIdentifier"
        ]
    )
    Rule: (
        "Primary"
        '-'
        Expression: OrderedChoice: [
            "String"
            "CharacterRange"
            "Escape"
            "AnyCharacter"
            "ScopedRule"
            Sequence: [
                "RuleName"
                Prefix: (
                    "&!"
                    String: "<"
                )
            ]
            Sequence: [
                String: "("
                "Expression"
                String: ")"
            ]
        ]
    )
    Rule: (
        "Suffix"
        '='
        Expression: Sequence: [
            "Primary"
            Suffix: (
                Expression: OrderedChoice: [
                    String: "^+"
                    String: "^*"
                    CharacterRange: [
                        '?'
                        '*'
                        '+'
                    ]
                    String: "|+"
                    String: "|?"
                ]
                "|?"
            )
        ]
    )
    Rule: (
        "Prefix"
        '='
        Expression: Sequence: [
            Suffix: (
                Expression: OrderedChoice: [
                    String: "&!"
                    CharacterRange: [
                        '&'
                        '!'
                    ]
                ]
                "|?"
            )
            "Suffix"
        ]
    )
    Rule: (
        "Join"
        '='
        Expression: Sequence: [
            "Prefix"
            Expression: OrderedChoice: [
                String: "^%"
                String: "%+"
                String: "%"
                String: "|%"
            ]
            "Prefix"
        ]
    )
    Rule: (
        "Joined"
        '='
        Expression: Join: (
            Expression: OrderedChoice: [
                "Join"
                "Prefix"
            ]
            "|%"
            String: "^"
        )
    )
    Rule: (
        "Sequence"
        '='
        Expression: Suffix: (
            "Joined"
            "|+"
        )
    )
    Rule: (
        "OrderedChoice"
        '='
        Expression: Join: (
            "Sequence"
            "|%"
            String: "/"
        )
    )
    Rule: (
        "Expression"
        '='
        Expression: "OrderedChoice"
    )
    Rule: (
        "Rule"
        '='
        Expression: Sequence: [
            "RuleName"
            String: "<"
            CharacterRange: [
                '-'
                '='
            ]
            "Expression"
        ]
    )
    Rule: (
        "Grammar"
        '-'
        Expression: Suffix: (
            "Rule"
            '+'
        )
    )
]
