list( type ) attribute:
    A list of elements of "type". If type is a simple rule e.g.:
        brack := '(' . ')'

    Then the list always becomes of type `string' and will store the match of 
    the entirerule.

    Everytime attribute is matched a new element is appened to the list. e.g.:

        list( id ) params := '(' id (',' id)* ')'

    Will appened each parameter in the list (which must be an identifier) to
    the list params.

    If the parameter has no body e.g.
        list( \d ) nums;
    
    Then when nums is used in other rules elements are appended to the list.

        list(\d+) nums;
        commSepNums := nums (',' nums)* ;

    Whenever commSepNums matches a '\d' in this case it will be appeneded to
    nums.

ordered_set( type ) attribute:

    Like a list but if the same element is added twice an error is raised.
    
