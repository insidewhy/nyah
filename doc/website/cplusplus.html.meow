!html
head {
    %title nyah for c++(0x) programmers
    link(rel=stylesheet, type=text/css, href=css/global.css)
}

%h1 Nyah for c++(0x) programmers

%h2 &ldquo;const&rdquo; methods can be deduced by the compiler

A const prefix is only necessary after a method to restrict the method to be valid of specialised to work on constant objects, otherwise whether an object is const or not can be inferred by the compiler, and a const version of the method will be automatically generated by the compiler if necessary.

%pre(style=margin-top:30px) <<EOF
    class scoped_ptr[T] {
        def get() = value_

        def reset(T *new_value) {
            if (value_) delete value_
            value_ = new_value
        }

        def this(value = 0) { value_ = value }
        def delete { if (value_) delete value_ }

        private value_:T*
    }

    ptr := scoped_ptr[int](new 0)
    const_ptr_ref :& = ptr

    // this is fine, get() can be made const
    print(const_ptr_ref.get())

    // this is not fine, reset can not be made const
    const_ptr_ref.reset(new 1)
EOF
