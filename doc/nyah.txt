Single Character Matches:
  \n newline
  \s whitespace
  \t tab
  \' parser for single quote
  \" parser to match double quote
  .  any character.
  [pqr]    Match any of the individual characters p, q or r.
  [!pqr]   Match any character except p, q or r.
  'c'      Same as [c]
  "c"      Same as [c]

Operator Precedence
    !p      Returns false if p matches, and true if p fails,
            If p is a single character match then advance the parser
            by one character (unless & is used before !), otherwise the
            position is left as it was before the !p rule was matched.

    &p      Match p but leave the parser position where it was before the &p
            rule was matched even if p succeeds.

    p*      Match p zero or more times.
    p+      Match p one or more times.
    p?      Match p zero or once.

    p ^ q   Match p followed by q with no whitespace between.

    p - q   Match p but not q.

    p % q   Match p joined by q. The result type is list(p).

    p  q    Match p followed by q.
            If both p and q are not single character matches then allow
            optional whitespace to separate them.

    p | q   Try to match p, then try to match q if that fails.

    p ~ q   Match p followed by q separated by optional whitespace.

Shortcuts
    - Transitivity of -
        For p - q, q is transitive over any | in p e.g.
        (p | q) - r  --> (p - r | q - r)

        p* - q --> (p - q)*

        Combining these
        (p | q)* - r  --> (p - r | q - r)*

